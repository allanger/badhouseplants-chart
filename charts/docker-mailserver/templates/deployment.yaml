---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{ toYaml .Values.deployment.annotations | indent 4 }}
  {{ end }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy: {{- toYaml .Values.pod.dockermailserver.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
      {{- if .Values.pod.dockermailserver.annotations }}
      annotations:
        {{ toYaml .Values.pod.dockermailserver.annotations | indent 8 }}
      {{- end }}
    spec:
      runtimeClassName: {{ .Values.runtimeClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      securityContext:
        {{ toYaml .Values.securityContext | indent 8 }}
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ template "dockermailserver.pvcName" . }}
        {{- if .Values.pod.dockermailserver.ssl_type }}
        - name: "ssl-cert"
          secret:
            {{- if .Values.ssl.useExisting }}
            secretName: {{ .Values.ssl.existingName }}
            {{- else }}
            secretName: {{ template "dockermailserver.fullname" . }}-tls
            {{- end }}
        {{- end }}
        {{- if .Values.additionalVolumes }}
          {{ toYaml .Values.additionalVolumes | indent 8 }}
        {{- end }}
        - name: tmp
          emptyDir: {}
      initContainer: 
      containers:
        - name: dockermailserver
          env:
            {{- include "dockermailserver.upstream-env-variables" . | nindent 10 }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
          {{- if ne .Values.pod.dockermailserver.enable_fail2ban "0" }}
            capabilities:
              add:
                - "NET_ADMIN"
          {{- end }}
          {{- toYaml .Values.pod.dockermailserver.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.pod.dockermailserver.ssl_type }}
            - name: ssl-cert
              mountPath: /etc/certs
              readOnly: true
            {{- end }}
            - name: data
              mountPath: /tmp
              subPath: mail-config
            - name: data
              mountPath: /var/mail
              subPath: mail
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
            {{- if .Values.additionalVolumeMounts }}
            {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
            {{- end }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
      restartPolicy: "Always"
